<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[GitAddRemote]]></title><description><![CDATA[A blog dedicated to software development and management practices from a remote work perspective.]]></description><link>https://gitaddremote.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 23 Sep 2019 00:55:18 GMT</lastBuildDate><item><title><![CDATA[Add Configurable Navigation Bar To Gatsby Blog]]></title><link>https://gitaddremote.github.io/20190915-001_add-a-configurable-navigation-bar-to-gatsby-blog/</link><guid isPermaLink="false">https://gitaddremote.github.io/20190915-001_add-a-configurable-navigation-bar-to-gatsby-blog/</guid><pubDate>Sun, 15 Sep 2019 07:27:03 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Recreating Map Function With Promises]]></title><description><![CDATA[A common practice when hiring a new developer is to have them complete a practical coding test. This can be completed via a take home…]]></description><link>https://gitaddremote.github.io/recreating-map-function-with-promises/</link><guid isPermaLink="false">https://gitaddremote.github.io/recreating-map-function-with-promises/</guid><pubDate>Sat, 14 Sep 2019 07:27:03 GMT</pubDate><content:encoded>&lt;p&gt;A common practice when hiring a new developer is to have them complete a practical coding test. This can be completed via a take home project. Often however, the developer is asked to complete a practical code test during the interview. While I understand why this happens, I don’t believe setting up an adversarial situation during the interview process is ideal when hiring a new candidate. That said, it is a fact of life we as developers have to work through. As such it is a great idea to complete regular programmatic challenges as part of our interview preparation. Today, I decided to remake the Array.map function using promises for just a such a challenge.&lt;/p&gt;
&lt;h2&gt;What Is The Map Function&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;map method&lt;/a&gt; was added to the Array global object with the release of ES6, along with the similar &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot;&gt;filter&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce&quot;&gt;reduce&lt;/a&gt; methods. Per the documentation the intended purpose is: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“The map() method creates a new array with the results of calling a provided function on every element in the calling array.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This method is largely syntatic sugar, but wow does it make our code so much more readable, and easier to work with. Both of these things, along with standardizing a boilerplate code pattern make the map function another great addition to the JavaScript language as it continues to mature.&lt;/p&gt;
&lt;h2&gt;Why Recreate The Array Map Function&lt;/h2&gt;
&lt;p&gt;As I said, running through coding challenges is a great way to sharpen your mental toolbox. The Map function has been around since ES6 which means while it may not be brand new, it certainly isn’t that old either. A friend recently was asked to complete a similar challenge during an interview. I figure if the challenge is good enough for a real interview process, it is good enough to start off with our first coding challenge for the blog.&lt;/p&gt;
&lt;h2&gt;Let’s Setup The New Function&lt;/h2&gt;
&lt;p&gt;Let’s setup the new function, even though there is not much to it. We start off by adding a new function to the Array prototype using the Object.define function. This function accepts one argument which is the callback we will call on every iteration through the array. Once we have the function shell created we can go ahead and setup our return variable. We also setup the promise we will return once our map function is completed with it’s task.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-javascript line-numbers&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/**
 * Making an async array map function
 */&lt;/span&gt;
Object&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;defineProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;maptronic&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  enumerable&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  configurable&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token function-variable function&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;mapFunc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; returnVal &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;resolve&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; reject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;### In The New Function ###&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;returnVal&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that we have the basic structure in place let’s talk about what it currently does. When we call the “maptronic” function on an array, it currently spits out the text ’### In The New Function ###’ to the console and then resolves the promise with the empty array as the returned data. We have access to the data in the original array itself at this point so let’s use that data to complete the function. (And, yes I realize I am adding a function property to a core object, but that is a totally different discussion.)&lt;/p&gt;
&lt;h2&gt;Let’s Iterate&lt;/h2&gt;
&lt;p&gt;Since we are currently in the array object itself, we have full access to the data of that array. Which means we can iterate over it and perform whatever action is needed. To access the data in the original array, we can call “this” to reference the array itself and then iterate using the forEach function. &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-javascript line-numbers&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;/**
   * Async map function
   */&lt;/span&gt;
  Object&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;defineProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;maptronic&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    enumerable&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    configurable&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token function-variable function&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;mapFunc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; returnVal &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;resolve&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; reject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; found &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;mapFunc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;element&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            returnVal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;found&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;returnVal&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token function&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For each iteration through the array we take the current element and pass it into the callback function that was passed into the maptronic function. Once the callback function responds, we add the resulting value to the returnVal array. And finally, once the forEach loop is finished, we return the new promise passing the resulting new array as it’s data.&lt;/p&gt;
&lt;h1&gt;Code In Action&lt;/h1&gt;
&lt;p&gt;Let’s finish off by seeing our code in action using sample code. We will start off in the same file, creating an array of project numbers as our use case. Once we have this array in place, we will use it with our new maptronic function and ultimately display the updated values. These updated values will be created using the adjustProjectedNumbers function that we pass into the maptronic function.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre style=&quot;counter-reset: linenumber NaN&quot; class=&quot;language-javascript line-numbers&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Original Array List&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; baseProjectNumbers &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3.2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Use the new Array.maptronic function passing our custom function&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; newArray &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; baseProjectNumbers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;maptronic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;INDEX: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;i&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;ORIGINAL ARR: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;a&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; val &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; e &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1.6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; Number&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isInteger&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;val&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; val &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; val&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toFixed&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Display updated values from new array&lt;/span&gt;
  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; newArray &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space: normal; width: auto; left: 0;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And there you have it. If all worked as expected you should have a ”{ newArray: Promise { [ 16, 48, ‘1.60’, ‘5.12’ ] } }” displayed in the console. When you called the “baseProjectNumbers.maptronic” function, we iterate over each value in the original array, apply the function “baseProjectNumbers” to each value in the original array, and then store that modified value in a new array. Once we finish iterating over the original array we return the new array with the updated values.&lt;/p&gt;
&lt;h1&gt;The End Result&lt;/h1&gt;
&lt;p&gt;As I said, the end result is really quite simple. There is no real reason to use this code. Not when we have a real, compiled map function with the release of ES6. This was simply an exercise that intrigued me when a friend mentioned it. And I think, this is a great way to hone your development skills. Small, projects like this make your mind think critically especially when you are adding to your polyglot catalog like me.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Create Production Ready Node Base Project]]></title><link>https://gitaddremote.github.io/20190916-001_create-production-ready-node-base-project/</link><guid isPermaLink="false">https://gitaddremote.github.io/20190916-001_create-production-ready-node-base-project/</guid><pubDate>Fri, 13 Sep 2019 07:27:03 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[How To Do CRUD with Github Issues API]]></title><link>https://gitaddremote.github.io/20190920-001_how-to-do-crud-with-github-issues-api/</link><guid isPermaLink="false">https://gitaddremote.github.io/20190920-001_how-to-do-crud-with-github-issues-api/</guid><pubDate>Fri, 13 Sep 2019 07:27:03 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Basic Styled Component With Gatsby Blog]]></title><link>https://gitaddremote.github.io/20190917-001_basic-style-component-with-gatsby-blog/</link><guid isPermaLink="false">https://gitaddremote.github.io/20190917-001_basic-style-component-with-gatsby-blog/</guid><pubDate>Fri, 13 Sep 2019 07:27:03 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[How To Do CRUD with Github Issues API]]></title><link>https://gitaddremote.github.io/20190922-001_how-to-do-crud-with-slack-chat-api/</link><guid isPermaLink="false">https://gitaddremote.github.io/20190922-001_how-to-do-crud-with-slack-chat-api/</guid><pubDate>Fri, 13 Sep 2019 07:27:03 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Add Publish Flag To Posts In Gatsby]]></title><description><![CDATA[The first thing I wanted to do after setting up this new blog using the Gatsby Starter Project is to make it possible to only display posts…]]></description><link>https://gitaddremote.github.io/20190912-001_mark-a-file-as-unpublished-in-gatsby-starter-blog/</link><guid isPermaLink="false">https://gitaddremote.github.io/20190912-001_mark-a-file-as-unpublished-in-gatsby-starter-blog/</guid><pubDate>Thu, 12 Sep 2019 06:27:03 GMT</pubDate><content:encoded>&lt;p&gt;The first thing I wanted to do after setting up this new blog using the Gatsby Starter Project is to make it possible to only display posts that I wanted to show. There are for sure going to be times where I want to work on a series of posts over time that I can also version, but not have them show on my live site until I am ready. This is where I first started learning about frontmatter and how to query it using GraphQL in the Gatsby blog.&lt;/p&gt;
&lt;p&gt;NOTE: This probably won’t scale well&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Why I Am Using Gatsby For This Blog]]></title><description><![CDATA[It may be a bit odd as someone who has worked professionally making and hosting WordPress websites to create a blog using a different tool…]]></description><link>https://gitaddremote.github.io/plans-for-gatsby-and-gitaddremote-blog/</link><guid isPermaLink="false">https://gitaddremote.github.io/plans-for-gatsby-and-gitaddremote-blog/</guid><pubDate>Wed, 11 Sep 2019 06:27:03 GMT</pubDate><content:encoded>&lt;p&gt;It may be a bit odd as someone who has worked professionally making and hosting WordPress websites to create a blog using a different tool. WordPress is a fantastic tool, and truly is a wonderful tool for creating all manner of websites from blogs to e-commerce sites. That said, with the focus of this blog being more about my personal growth using JavaScript and mobile technologies it seems only fitting I use a tool based largely on that. But there is more to the story.&lt;/p&gt;
&lt;h2&gt;Something New&lt;/h2&gt;
&lt;p&gt;After years of blogging on WordPress, I admit I was keen to try something new. I wanted, not just a new technology stack, I wanted a new user experience. I wanted to think about blogging software from a new perspective. No yes, I am aware, Gutenberg blocks are really new in the WordPress space, but that still didn’t quite cut it. And yes, I know Gutenberg blocks are written using react, a technology used in Gatsby, but again. I just needed something new.&lt;/p&gt;
&lt;h2&gt;Learn By Doing&lt;/h2&gt;
&lt;p&gt;Everyone has their own style of learning. While I can of course gain knowledge through reading and 3rd party demonstrations, the best way for me to retain and build on new knowledge is to actually do things myself. By attempting to put something new into practice, I find the skills are etched deeper into my brain and I am able to repeat the process again, with less assistance or reference material. An additional benefit is I often learn the pain points of doing things the hard way. It is when I learn the pain points that I tend to start thinking of creative solutions to the problem. To this end, I am starting with nothing more than a basic Gatsby installation using the &lt;a href=&quot;https://www.gatsbyjs.org/starters/gatsbyjs/gatsby-starter-blog/&quot;&gt;Gatsby Starter Blog&lt;/a&gt; project. There is so much I want to learn that Gatsby is built upon or can utilize.&lt;/p&gt;
&lt;h2&gt;Learn By Teaching&lt;/h2&gt;
&lt;p&gt;As I gain a better understanding of things, I find that I can even better understand and extend that knowledge by teaching it to others. Often those I am teaching think of questions that I either can’t answer in the moment causing me to do more research and add to my knowledge. Other times they will ask questions in a way I would never have considered. Again, causing me to do more research. And at the end of if it all, to be an effective teacher I have to break things down to an understandable level.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“If you can’t explain it simply, you don’t understand it well enough” —Albert Einstein (Or not, the internet can’t seem to decide who said this originally)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To this end, I am wanting to advance my existing knowledge of JavaScript and React, and gain new knowledge in GraphQL. This is core to what Gatsby can do for me. Additionally, the flexibility of Gatsby means I could continue to use a markdown backed site (as I am doing to start this blog), or back it with something like &lt;a href=&quot;https://www.netlify.com&quot;&gt;Netlify&lt;/a&gt;, or even have the backend be a headless &lt;a href=&quot;https://wordpress.org/&quot;&gt;WordPress&lt;/a&gt; installation. The point is, many of these things are the very topics I wish to teach via this blog.&lt;/p&gt;
&lt;h2&gt;The Only Constant Is Change&lt;/h2&gt;
&lt;p&gt;If you work in the IT industry for even a handful of years, this statement will ring very true. Change is the only constant, and to that end, being relevant in the software industry means staying current. Falling behind isn’t necessarily a job search killer, but as you fall further behind you will find it increasingly more difficult to find a gig. I know this from experience all too well. So, as I increase my skills, and teach these new skills, I will use the changes I make to this blog as a focus on some of the tutorials I will be posting. Every time I add a feature that I need for the blog I will do my best to document it in a tutorial that can hopefully help others.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[How To Deploy A Gatsby Blog To Github Pages]]></title><description><![CDATA[CNAME file]]></description><link>https://gitaddremote.github.io/20190913-001_how-to-deploy-gatsby-blog-to-github-pages/</link><guid isPermaLink="false">https://gitaddremote.github.io/20190913-001_how-to-deploy-gatsby-blog-to-github-pages/</guid><pubDate>Sat, 07 Sep 2019 06:27:03 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://github.com/tschaub/gh-pages/issues/213&quot;&gt;CNAME file&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Git Add Remote Initial Commit]]></title><description><![CDATA[I have written many blog posts on different blogs in the past. This time however, I am starting a new adventure using tools that are largely…]]></description><link>https://gitaddremote.github.io/git-add-remote/</link><guid isPermaLink="false">https://gitaddremote.github.io/git-add-remote/</guid><pubDate>Sat, 07 Sep 2019 06:27:03 GMT</pubDate><content:encoded>&lt;p&gt;I have written many blog posts on different blogs in the past. This time however, I am starting a new adventure using tools that are largely new to me. While I have worked with raw JavaScript, and JavaScript based tools for about 20 years, &lt;a href=&quot;https://www.gatsbyjs.org&quot;&gt;Gatsby&lt;/a&gt; is a brand new world to me. It combines much of what I already know with new technologies I am actively working to master such as &lt;a href=&quot;https://nodejs.org&quot;&gt;Node&lt;/a&gt;, &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; and &lt;a href=&quot;https://graphql.org/&quot;&gt;GraphQL&lt;/a&gt;. Working with a complete focus of direction to living and breathing JavaScript based technologies coupled with a focus on proper work management via remote work and asynchronous communication, to say I am excited is an understatement.&lt;/p&gt;
&lt;h2&gt;Git Add Remote Begins&lt;/h2&gt;
&lt;p&gt;In this blog I‌ will be writing about different areas of development through the lens of working as, or managing a, developer. The development tutorials and topics discussed in regards to software development will initially be focused on JavaScript technologies in the full stack realm. We will eventually be working through topics on mobile such as &lt;a href=&quot;https://developer.apple.com/swift/&quot;&gt;iOS development&lt;/a&gt; with &lt;a href=&quot;https://swift.org/&quot;&gt;Swift&lt;/a&gt;, as well as &lt;a href=&quot;https://developer.android.com/kotlin&quot;&gt;Android development&lt;/a&gt; with Kotlin(&lt;a href=&quot;https://kotlinlang.org/&quot;&gt;https://kotlinlang.org/&lt;/a&gt;). &lt;/p&gt;
&lt;p&gt;Further, the topics surrounding remote work, mostly presence-free, asynchronous remote work, will explore tips and best practices the industry is using to make remote culture, work. Much of this discussion will be heavily influenced, at least initially, by the model of work exemplified by &lt;a href=&quot;https://basecamp.com/&quot;&gt;Basecamp&lt;/a&gt;. Jason Fried and David Heinemeier Hansson, both leading partners at Basecamp, have successfully bucked the trend of what makes a “great” software business as well as what makes a great business to work for.&lt;/p&gt;
&lt;h2&gt;Why “Git Add Remote”&lt;/h2&gt;
&lt;p&gt;If you are familiar with using Git, more specifically Git commands, you will notice “git add remote” should actually be “git remote add.” My reasoning for this is that I want to convey that in this world of software development, adding remote generally can make for a happier, more talented workforce, and thus a better product. Alas, I have to say that while I like this word switch, it initially was not deliberate. When I first typed the name for our twitter account, I mistyped the order. A happy accident then, as I liked the “incorrect” version even better.&lt;/p&gt;
&lt;h2&gt;What The Tech&lt;/h2&gt;
&lt;p&gt;I have a long history with &lt;a href=&quot;https://www.java.com/en/&quot;&gt;Java&lt;/a&gt;, and moderately long history with &lt;a href=&quot;https://wordpress.org/&quot;&gt;WordPress&lt;/a&gt;. In fact, part of my client business comes from creating Java applications as well as creating and hosting WordPress websites. The majority of my revenue and work comes from application development. In the past I have created these application using Java, JSF, Tomcat and Microsoft SQL Server. More recently however, I have had client work for Node.js and MongoDB API projects, with react clients. And that is largely what you will see here. While I will be feeling out my tutorial and writing style over time, I believe in creating projects to learn. This is why I plan on building small, easy to digest tutorials about Node.js, NoSQL databases, React and more.&lt;/p&gt;
&lt;p&gt;Additionally, I will be using this blog as a learning and teaching tool for &lt;a href=&quot;https://www.gatsbyjs.org&quot;&gt;Gatsby&lt;/a&gt;. While I technically was a full stack developer in the past, I can’t as comnfortable make that claim when the client side is using tools like React, Angular, Vue, etc. Because of this, you will notice the blog to be a bit rough around the edges, but I hope over time that it gets more refined and robust. And of course I will document it every step of the way.&lt;/p&gt;
&lt;h2&gt;About Demian&lt;/h2&gt;
&lt;p&gt;I have been working professionally in the software world for just shy of 20 years. Starting out as a quality assurance analyst and then moving on to writing and leading small teams that write software, I have had my fair share of experiences in the corporate world. For the last few years I have run my own small agency hiring contractors for project work as needed. Throughout this time I have had various experiences with working from home and feel I have a strong grasp as to what a remote team, and a remote culture should look like. &lt;/p&gt;
&lt;p&gt;I would not put myself in the role of an authority on the topic though and this is why, along with teaching and learning more about the modern development stack, I am creating this site. Also, at this point in my career, I am scaling back my client business to a part time effort and am interested in exploring contract work once again. This time however with a focus on high-functioning remote teams.&lt;/p&gt;
&lt;h2&gt;Let’s Go!&lt;/h2&gt;
&lt;p&gt;So there you have it. A standard opening blog post for a new blog. At this point other than the blog and my twitter account, &lt;a href=&quot;http://twitter.com/gitaddremote&quot;&gt;@GitAddRemote&lt;/a&gt; I have no solid plans. There could be a future podcast, or maybe even a YouTube channel. But let’s take things one step at a time. While this idea of “Git Add Remote” is initially about me learning and voicing my thoughts and helping my learn by embracing the Feynman Technique, it is also about you.  If this site helps anyone at all then I have just gotten the icing on top of my cake.&lt;/p&gt;
&lt;h2&gt;One Last Thing&lt;/h2&gt;
&lt;p&gt;To the point, while I will endeavour to ensure the tutorials are correct and clear, I will be operating under the philosophy of, Done is better than perfect. So let’s do this, good luck and happy learning.&lt;/p&gt;</content:encoded></item></channel></rss>