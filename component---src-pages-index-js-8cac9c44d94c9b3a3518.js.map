{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","navigationItems","menuLinks","posts","allMarkdownRemark","edges","location","map","node","frontmatter","fields","slug","published","key","style","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery"],"mappings":"uNAWMA,E,gLACJC,OAAA,WAAU,IAEAC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAkBP,EAAKI,KAAKC,aAAaG,UACzCC,EAAQT,EAAKU,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUX,KAAKC,MAAMU,SAAUN,MAAOH,GAC5C,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAAC,IAAD,CAAYE,UAAWD,IACvB,kBAAC,IAAD,MACCE,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAGpD,OAAiB,IAFCH,EAAKC,YAAYG,UAK/B,6BAASC,IAAKL,EAAKE,OAAOC,MACxB,gCACE,wBACEG,MAAO,CACLC,aAAcC,YAAO,OAGvB,kBAAC,IAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWC,GAAIV,EAAKE,OAAOC,MACjDX,IAGL,+BAAQQ,EAAKC,YAAYU,OAE3B,iCACE,yBACEC,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,WAG/C,kBAAC,IAAD,CAAMT,MAAO,CAAEG,UAAU,QAAWC,GAAIV,EAAKE,OAAOC,MAApD,uBAUR,O,GAjDYa,IAAMC,WAyDfjC,YAER,IAAMkC,EAAS","file":"component---src-pages-index-js-8cac9c44d94c9b3a3518.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Navigation from \"../components/navigation\"\n\nimport { rhythm } from \"../utils/typography\"\n\nclass BlogIndex extends React.Component {\n  render() {\n\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const navigationItems = data.site.siteMetadata.menuLinks\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Navigation menuLinks={navigationItems} />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          const published = node.frontmatter.published;\n\n          if(published === true){\n\n            return (\n              <article key={node.fields.slug}>\n                <header>\n                  <h3\n                    style={{\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                      {title}\n                    </Link>\n                  </h3>\n                  <small>{node.frontmatter.date}</small>\n                </header>\n                <section>\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: node.frontmatter.description || node.excerpt,\n                    }}\n                  />\n                    <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                      Read More...\n                    </Link>\n                  \n                </section>\n              </article>\n            )\n  \n          }\n          else{\n            return undefined;\n          }\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        menuLinks {\n          name\n          link\n        }        \n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            published\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}